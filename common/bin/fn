#!/usr/bin/env ruby

# ignore any patterns in a .gitignore file
# see http://stackoverflow.com/a/16595367/532524 for example
def excluded
  if File.exist? '.gitignore'
    patterns = File.read('.gitignore').split("\n")
    patterns.map do |pattern|
      "-not \\( -path \"*#{pattern}*\" -prune \\)"
    end.join(' ')
  else
    ''
  end
end

if ARGV.length == 0
  echo 'Usage: fn search_string [within_directory]'
  exit 1
elsif ARGV.length == 1
  search_term = ARGV[0]
  directory = '.'
else
  search_term, directory = ARGV
end

command = "find #{directory} #{excluded} | grep -i #{search_term}"
result = `#{command}`

# the unless here prevents a blank line when there are no matches
puts result unless result == ''

# exit with 0 if some matches found, otherwise exit with non-zero (probably 1)
# not really needed but might be used for some scripting
exit $?.exitstatus
