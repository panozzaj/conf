#!/usr/bin/env ruby

# Quickly find files that have X in their name.
# (possibly scoped to be within a directory)

# ignore any patterns in a .gitignore file
# see http://stackoverflow.com/a/16595367/532524 for example
def ignored
  [
    '.agignore',
    '.cvsignore',
    '.gitignore',
    '.hgignore',
  ].map do |file_with_ignore_patterns|
    if File.exist? file_with_ignore_patterns
      patterns = File.read(file_with_ignore_patterns).split("\n")
      patterns.map do |pattern|
        next if pattern =~ /^#/
        next if pattern =~ /^\s*$/
        "-not \\( -path \"*#{pattern}*\" -prune \\)"
      end.compact.join(' ')
    else
      ''
    end
  end.join(' ') + [
    "-not \\( -path \"*\\.git*\" -prune \\)"
  ].join(' ')
end

if ARGV.length == 0
  puts 'Usage: fn search_string [within_directory]'
  exit 1
elsif ARGV.length == 1
  search_term = ARGV[0]
  directory = '.'
else
  search_term, directory = ARGV
end

command = "find #{directory} #{ignored} | grep -i #{search_term}"
result = `#{command}`

# the unless here prevents a blank line when there are no matches
puts result unless result == ''

# exit with 0 if some matches found, otherwise exit with non-zero (probably 1)
# not really needed but might be used for some scripting
exit $?.exitstatus
