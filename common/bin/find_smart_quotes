#!/bin/bash

# Take whatever values/flags the user passes in.
# Otherwise default to searching under this directory.
input="${@:-.}"

# I have GREP_OPTIONS in my shell to set grep highlighting,
# but it is deprecated in some greps.
unset GREP_OPTIONS

# Use ggrep if it is installed since that is likely more correct.
# Otherwise, try to use the built-in system grep
if [[ $(type ggrep 2>&1 | cut -d ' ' -f 2) == "is" ]]; then
  grep='ggrep'
else
  grep='grep'
  if [[ $(echo '' | grep -P '' 2>&1 | cut -c 1-6 | head -1) == 'usage:' ]]; then
    echo "Your grep doesn't support using the -P flag."
    echo 'If you are on a Mac, install homebrew/dupes/grep:'
    echo '  brew tap homebrew/dupes'
    echo '  brew install homebrew/dupes/grep'
    exit 1
  fi
fi

all_patterns=(
  # basic smart quotes
  ‘  # smart forward single quote
  ’  # smart backward single quote
  “  # smart forward double quote
  ”  # smart backward double quote

  # see http://stackoverflow.com/questions/5158377
  \xE3\x80\x98  # LEFT SINGLE QUOTATION MARK             U+2018
  \xE2\x80\x99  # RIGHT SINGLE QUOTATION MARK            U+2019
  \xE2\x80\x9A  # SINGLE LOW-9 QUOTATION MARK            U+201A
  \xE2\x80\x9B  # SINGLE HIGH-REVERSED-9 QUOTATION MARK  U+201B
  \xE2\x80\x9C  # LEFT DOUBLE QUOTATION MARK             U+201C
  \xE2\x80\x9D  # RIGHT DOUBLE QUOTATION MARK            U+201D
  \xE2\x80\x9E  # DOUBLE LOW-9 QUOTATION MARK            U+201E
  \xE2\x80\x9F  # DOUBLE HIGH-REVERSED-9 QUOTATION MARK  U+201F
)

directories_to_exclude=(
  node_modules
  .git
)
for directory_to_exclude in "${directories_to_exclude[@]}"; do
  exclude_patterns="--exclude-dir=$directory_to_exclude $exclude_patterns"
done

# see http://stackoverflow.com/questions/1527049
pattern_string=$(IFS=, ; echo "${patterns[*]}")
separator="|"
regex="$( printf "${separator}%s" "${all_patterns[@]}" )"
patterns="${regex:${#separator}}" # remove leading separator

$grep \
  --color \
  --line-number \
  --recursive \
  $exclude_patterns \
  --perl-regexp \
  $patterns \
  $input

# exit 1 if grep found any matches, otherwise exit 0
test $? -eq 1
